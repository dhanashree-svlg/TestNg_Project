<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="HP" failures="0" tests="3" name="Default test" time="1.961" errors="0" timestamp="07 Jun 2025 16:58:54 GMT">
  <testcase classname="swaglab_test.BaseClass" name="@BeforeMethod SetUp" time="1.3">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: crashed.
  (session not created: DevToolsActivePort file doesn&amp;apos;t exist)
  (The process started from chrome location C:\Program Files\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: &amp;apos;HP&amp;apos;, ip: &amp;apos;192.168.29.81&amp;apos;
Build info: version: &amp;apos;4.27.0&amp;apos;, revision: &amp;apos;d6e718d134&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--user-data-dir=C:\Users\dh..., --profile-directory=Profile 1], binary: C:\Program Files\Google\Chr..., extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: crashed.
  (session not created: DevToolsActivePort file doesn't exist)
  (The process started from chrome location C:\Program Files\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: 'HP', ip: '192.168.29.81'
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--user-data-dir=C:\Users\dh..., --profile-directory=Profile 1], binary: C:\Program Files\Google\Chr..., extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:162)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:114)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)
at swaglab_test.BaseClass.SetUp(BaseClass.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod SetUp -->
  <testcase classname="swaglab_test.BaseClass" name="@AfterMethod TearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod TearDown -->
  <testcase classname="swaglab_test.BaseClass" name="@BeforeMethod SetUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod SetUp -->
  <testcase classname="swaglab_test.BaseClass" name="@AfterMethod TearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod TearDown -->
  <testcase classname="swaglab_test.BaseClass" name="@BeforeMethod SetUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod SetUp -->
  <testcase classname="swaglab_test.BaseClass" name="@AfterMethod TearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod TearDown -->
  <testcase classname="swaglab_test.LoginTest" name="LoginSuccessTest" time="0.0">
    <skipped/>
  </testcase> <!-- LoginSuccessTest -->
  <testcase classname="swaglab_test.LoginTest" name="LoginFailureTest" time="0.0">
    <skipped/>
  </testcase> <!-- LoginFailureTest -->
  <testcase classname="swaglab_test.LoginTest" name="LocakedUserLoginFailureTest" time="0.0">
    <skipped/>
  </testcase> <!-- LocakedUserLoginFailureTest -->
  <testcase classname="swaglab_test.LoginTest" name="LoginFailureTestFromProperties" time="0.0">
    <ignored/>
  </testcase> <!-- LoginFailureTestFromProperties -->
  <testcase classname="swaglab_test.LoginTest" name="LoginFailureTestFromExcel" time="0.0">
    <ignored/>
  </testcase> <!-- LoginFailureTestFromExcel -->
</testsuite> <!-- Default test -->
